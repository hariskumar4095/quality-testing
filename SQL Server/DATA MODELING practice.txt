
*******************
  DATA MODELING
*******************
MODELING:
SIMPLIFICATION OF REAL 

DATA MODELING:
DESCRIBES DATA, DATA RELATION, DATA SEMANTICS, CONSTRAINTS

NEEDS OF BUSINESS CUSTOMER
CONVERT NEEDS TO MODELS
BUILD DB
BUILD RELATIONS BETWEEN THEM

ENTITY--ATTRIBUTES--RELATIONSHIPS(1:1, 1:MANY, MANY:MANY/MANDATE:OPTIONAL/SUPERTYPE:SUBTYPE)
LOGICAL/PHYSICAL MODEL
DIMENSIONAL MODELING(FACT/DIM--STAR AND SNOWFLACKS)
RELATIONAL ALGEBRA AND SQL
DATABASE NORMALIZATION
HIERARCHIES



TYPES:
BPM:            BUSINESS PROCESS MODELING
                FOR BUSINESS ANALYST
                PROCESS FLOW

OOM:            OBJ ORIENTED MODELING
                SYS ARCHITECH/ANALYST
                APP ARCHITECH/ANALYST/DESIGN
                UML
CONCEPTUAL: BASIC SCHEMA OF TABLES/ENTITIES, NO ATTRIBUTES/CONSTRAINTS(PK/FK)
LOGICAL: ALL ENTITES/RELATIONS/ATTRIBUTES/CONSTRAINTS/NORMALIZATION
         (STEPS: 1. PK/FK 
                 2. RELATION BETWEEN THE ENTITES/TABLES
                 3. ATTRIBUTES
                 4. RELATIONS
                 5. NORMALIZE)

PHYSICAL: REPRESENTS THE PHYSICAL STRUCTURE OF THE DATA
          TABLES/PK/FK/CONSTRAINTS/RELATIONS
          DEPENDS ON RDBMS 
        (STEPS: 1. CONVERT ENTITIES TO TABLES
                2. RELATIONS PK/FK
                3. ATTRIBUTES TO COLUMNS
         )
PDM:        PHYSICAL DATA MODELING
            DBA/ARCHITECT
            DWH
            RELATIONS

OBJECT ORIENTED DEVELOPMENT
***************************
OBJECT: ENTITY/THING(ANY THING IN THE WORLD)
        HERE IT CONTAINS DATA(ATTRIBUTES/QUALITIES)
        SYSTEMS(THINGS)/INTERFACES/LOCATION
OBJECT MODELING:
         ABSTRACTION: OUTSIDE VIEW OF THE OBJECT(ONLY SHOW IMP)
         ENCAPSULATION: WRAPING/PROTECTING DATA/CODE --MAKE PRIVATE--BY CLASS
         INHERITANCE:  PARENT CHILD
         POLYMORPHISM:  SAME NAME
METHODOLOGY: WATERFALL(SDLC), ITERATIVE(AGILE)
UML: UML SKETCHNG AND UML BLUEPRINT
     VISUALIZE/DOC(DIAGRAMS/GRAPHS) OF THE MODEL OF THE SOFTWARE SYSTEM
     UNIFIED MODELING LANGUAGE
     OLD TECHNOLOGY
     SOFTWARE BLUE PRINT
     PLATFORM INDEPENDENT
           STRUCTUE DIAGRAM: OBJ/PACKAGE/DEPLOY RELATION DIAGRAM
           BEHAVIOR DIAGRAM:   FUNCTION
           INTERACTION DIAGRAM:   SEQ/TIME/COMMUNICATION BETWEEN ENTITIES/OBJ
     
      USE CASE VIEW: ACTORS      +     USE CASES     +    RELATIONS
                     BANK              INSERT CARD
                     CUSTOMER 


ERWin DATA MODELER
******************
IT SHOWS SCHEMA JUST LIKE DATA SOURCE VIEW
LAYOUT 
CAN BE LOGICAL/PHYSICAL/LOGICAL+PHYSICAL VIEW
PLATFORM/SOFTWARE INDEPENDENT(ORACLE/SQLSERVER)
FORWARD/REVERSE ENGINEERING(DATA MODELER<--->DATA/QUERY) ----ACTION--FORWARD ENGINEERING ---SYNTAX---(SHOWS SYNTAX)
BUSINESS GLOSSARY
REPORT DESIGNER(MAY BE TABULAR/DIAGRAM/TEXT)-----(OPENS HTML VIEW)
REPOSITORY

 
PROCESS OF CREATING DATA MODEL(ERWin)
*************************************
1)FORWARD ENGINEERING
open ERwin---select LOGICALPHISICAL DATA MODELER---select DB---create ENTITY---create RELATION(FK/PK CREATED)---click FOREWARD ENGINEERING ---PREVIEW(DDL)---GENERATE---CONNECT TO THE SERVER AND DB---(YOU CAN VIEW IT IN THE DB)
2)REVERSE ENGINEERING
select REVERSE ENGINEERING FUNCTIONALITY---select DB---(IT SHOWS SCHEMA/TABLES/VIEWS ...)
(DEVELOPER MAY USE THIS PART MORE)
3)COMPARE FUNCTIONALITY
4)LAYOUT TOOL
you can design the schema (just for our ease)
5)TYPE OF VIEW TO BE DISPLAYED
right click---minimal/entire diagram/...










